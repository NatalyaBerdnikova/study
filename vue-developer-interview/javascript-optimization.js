// 1.Общие решения + webpack 2.React 3.Redux
// Важные метрики:
// 1. Время до первой отрисовки
// Важно чтобы размер бандла был небольшим и его можно было отдать быстро. Не более 3 сек при среднем интернет-соединении
// 2. Время до интерактивности
// 3. FPS (частота кадров в секунду)
// 4. Память/Трафик
// 5. Другое

// Общие советы
// 1. Для более менее сложных приложений использовать фреймворк
// 2. По-минимуму использовать сторонние библиотеки
// 3. Используйте декораторы debounce и throttle
// 4. Использование гибридного server-side rendering (Помогает улучшить время первой отрисовки)
// Можно отдавать пользователю разные компоненты под mobile/desktop в зависимости от его user-agent
// То же касается и интернационализации i18n
// 5. Сжатие файлов с помощью gzip require('compression');
// 6. Минимизация (Удаление пробелов, лишних символов, сделать имена переменных более короткими)
// 7. lazy-load (Изображения, шрифты, библиотеки npm, компоненты, редюсеры для redux)
// 8. Позволь webpack tree-shaking работать
// Например, с помощью webpack удаляются из бандла неиспользуемые модули.
// Lazy Loading + Декомпозиция.
// При импорте всего одной функции будет тянуться весь файл и лучше сделать его маленьким
// 9. Перерисовки rerendering (D React это react.memo и хуки useCallback, useMemo(() => {}, []));
